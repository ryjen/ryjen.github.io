<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>coda.life</title>
    <link>https://coda.life/</link>
    <description>Recent content on coda.life</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; all rights reserved</copyright>
    <lastBuildDate>Sat, 10 Jun 2017 01:33:30 -0700</lastBuildDate>
    
	<atom:link href="https://coda.life/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>OpenAPI Directory &amp; Swagger</title>
      <link>https://coda.life/2017/06/10/openapi-directory--swagger/</link>
      <pubDate>Sat, 10 Jun 2017 01:33:30 -0700</pubDate>
      
      <guid>https://coda.life/2017/06/10/openapi-directory--swagger/</guid>
      <description>Was browsing github and I came across the OpenAPI Directory. A good directory of API&amp;rsquo;s will help in thinking of a mobile app idea.
Couldn&amp;rsquo;t help but notice that all the API&amp;rsquo;s implement something called OpenAPI (&amp;quot;Swagger&amp;quot;) 2.0. Ok, great, consistency in API specs, that will help if you had to write one.
In fact, most web apps have been moving towards an architecture of an API backend and Javascript frontend that calls the API, so chances are if you had to write a web app it will have an API.</description>
    </item>
    
    <item>
      <title>Microsoft Dev Stack on macOS</title>
      <link>https://coda.life/2016/11/27/microsoft-dev-stack-on-macos/</link>
      <pubDate>Sun, 27 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://coda.life/2016/11/27/microsoft-dev-stack-on-macos/</guid>
      <description>As the tech giants becomes more friendly to other each other, I find myself wanting to evangelize a little bit.
When Microsoft bought Xamarin, they did not understimate the power of Xamarin.Forms for building cross platform UIs. Now with the release of Visual Studio for macOS and the Dotnet Core, its officially here to stay and I&amp;rsquo;m very pleased.
I&amp;rsquo;ve looked at a lot of cross platform solutions, this is as close as it gets to the holy grail, IMHO.</description>
    </item>
    
    <item>
      <title>Hugo &#43; Dokku &#43; Wercker = Goodness</title>
      <link>https://coda.life/2016/06/22/hugo-dokku-wercker-goodness/</link>
      <pubDate>Wed, 22 Jun 2016 00:00:00 +0000</pubDate>
      
      <guid>https://coda.life/2016/06/22/hugo-dokku-wercker-goodness/</guid>
      <description>Hugo Hugo is a static site generator with many powerful features like archtypes, themes, customization, etc.
Combined with tools like bower and brunch it makes for a pretty powerful app that could be more than a blog.
The workflow is simple - build your assets with brunch, run the hugo generator. The end result is a complete static html site you can deploy.
Dokku Dokku has been great for running multiple small apps on a single digitalocean droplet.</description>
    </item>
    
    <item>
      <title>c hacking: polymorphing 2</title>
      <link>https://coda.life/2015/12/02/c-hacking-polymoriphing-2/</link>
      <pubDate>Wed, 02 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://coda.life/2015/12/02/c-hacking-polymoriphing-2/</guid>
      <description>While working on cparse I found another nifty way to sort of simulate polymorphism.
cparse Another exercise in futility, a C implementation for the REST api at parse.com. Really the core of it is a web client and an object structure using json.
polymorphing I started off by having separate structure for the different type of objects, but I quickly realized there was a lot of code duplication. To solve this I used a combination of type defines and function pointers to the library API appear to be working with a seperate type, but are indeed still working with the base object type.</description>
    </item>
    
    <item>
      <title>Elixir and Phoenix</title>
      <link>https://coda.life/2015/09/09/elixir-and-phoenix/</link>
      <pubDate>Wed, 09 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://coda.life/2015/09/09/elixir-and-phoenix/</guid>
      <description>Saw a post on reddit about this new web framework phoenix. It is an elixir based framework. Elixir is based upon erlang. Erlang has been around a while (open-sourced in 1998) and is a massively scalable and highly reliable language used in telecoms, banking and instant messaging (among others).
Elixir brings very ruby-ish syntax to the language. Phoenix framework is like rails for elixir, and is pretty full featured.</description>
    </item>
    
    <item>
      <title>Gobo / Homebrew and Linux Application Organization</title>
      <link>https://coda.life/2015/08/03/gobo-/-homebrew-and-linux-application-organization/</link>
      <pubDate>Mon, 03 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://coda.life/2015/08/03/gobo-/-homebrew-and-linux-application-organization/</guid>
      <description>I really liked the way Gobo Linux refactored the organization of a linux filesystem.
The short story of Gobo was to have each Recipe (application/library) install everything it needs into its own directory. The app files are then linked to support the legacy filesystem that the OS needs (You can read more at Gobo at Glance or the history of gobo linux).
Sound familiar? It&amp;rsquo;s very much like Homebrew which installs each Formula in a Cellar with links to /usr/local.</description>
    </item>
    
    <item>
      <title>Java Key Path Json Objects</title>
      <link>https://coda.life/2014/02/20/java-key-path-json-objects/</link>
      <pubDate>Thu, 20 Feb 2014 00:00:00 +0000</pubDate>
      
      <guid>https://coda.life/2014/02/20/java-key-path-json-objects/</guid>
      <description>After using apple&amp;rsquo;s key-value coding to basically have models without writing models, I decided to write rewrite a simple wrapper for java&amp;rsquo;s JSONObject that will allow similar functionality.
I&amp;rsquo;m aware that this method and apple&amp;rsquo;s key value coding has a performance cost. But sometimes I&amp;rsquo;m willing to sacrifice a bit for development sake.
So given the following JSON:
{ &amp;quot;test1&amp;quot; : { &amp;quot;result&amp;quot;: &amp;quot;pass&amp;quot;, &amp;quot;code&amp;quot;: 42, &amp;quot;verified&amp;quot;, true, &amp;quot;subtest1&amp;quot;: [ { &amp;quot;result&amp;quot;: &amp;quot;fail&amp;quot;, &amp;quot;code&amp;quot;: 3.</description>
    </item>
    
    <item>
      <title>Poor Man&#39;s Polymorphism</title>
      <link>https://coda.life/2012/11/30/poor-mans-polymorphism/</link>
      <pubDate>Fri, 30 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://coda.life/2012/11/30/poor-mans-polymorphism/</guid>
      <description>Just when you think you know everything about C&amp;hellip; a way to polymorph C data structures using field ordering and casts.
 </description>
    </item>
    
    <item>
      <title>Crafting a Game With CraftyJS</title>
      <link>https://coda.life/2012/11/17/crafting-a-game-with-craftyjs/</link>
      <pubDate>Sat, 17 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://coda.life/2012/11/17/crafting-a-game-with-craftyjs/</guid>
      <description>Found a pretty cool javascript game engine called CraftJS that I&amp;rsquo;ve been playing with the past couple of days.
Has support for things like Entity Component System, Collision, Sprite Maps, etc.
Amos the Alien Amos the Alien is a small demo I made, you can check my progress there.
First thing to do if your going to try yourself is to head over Crafty Components and download the boilerplate.</description>
    </item>
    
    <item>
      <title>Droid Fortunes: An Experiment in Android Widgets</title>
      <link>https://coda.life/2012/07/04/droid-fortunes-an-experiment-in-android-widgets/</link>
      <pubDate>Wed, 04 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://coda.life/2012/07/04/droid-fortunes-an-experiment-in-android-widgets/</guid>
      <description>Background I have it set up on my OSX machine to give me a random fortune when I log into the shell. I thought it would be a good idea to port this to Android in the form of a widget and Droid Fortunes was born!
So a little more background on the the &amp;lsquo;fortune&amp;rsquo; command for those who do not know. The program itself is simple enough - display a random message stored in a database.</description>
    </item>
    
    <item>
      <title>C Sqlite Tricks</title>
      <link>https://coda.life/2012/05/15/c-sqlite-tricks/</link>
      <pubDate>Tue, 15 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://coda.life/2012/05/15/c-sqlite-tricks/</guid>
      <description>Well, I thought I would share some tricks I use for easy data CRUD&amp;rsquo;s in C (potentially C++/ObjC but its lacking typesafety). I&amp;rsquo;m using sqlite here, but could apply to any database.
This is how my data access works - I&amp;rsquo;m not saying its the best approach, its just how its evolved for me.
/* The account table name */ #define ACCOUNT_TABLE &amp;quot;account&amp;quot; /* a structure representing the account fields */ field_map account_values[] = { {&amp;quot;login&amp;quot;, &amp;amp;acc-&amp;gt;login, SQL_TEXT}, {&amp;quot;email&amp;quot;, &amp;amp;acc-&amp;gt;email, SQL_TEXT}, {&amp;quot;password&amp;quot;, &amp;amp;acc-&amp;gt;password, SQL_TEXT}, {&amp;quot;timezone&amp;quot;, &amp;amp;acc-&amp;gt;timezone, SQL_INT}, {0} }; /* saves the fields to the database */ acc-&amp;gt;id = db_save(account_values, ACCOUNT_TABLE, acc-&amp;gt;id);  As you can see, saving a structure is as simple as creating a field_map table and calling db_save.</description>
    </item>
    
    <item>
      <title>about</title>
      <link>https://coda.life/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coda.life/about/</guid>
      <description> &amp;nbsp; 778-240-3248  &amp;nbsp; ryan@coda.life  &amp;nbsp; [github.com/ryjen](https://github.com/ryjen?tab=repositories)   &amp;nbsp; [ca.linkedin.com/in/ryjen](http://ca.linkedin.com/in/ryjen)  &amp;nbsp; [coda.life](http://coda.life)  I currently work as a mobile application developer for a respectable software company. If you’d like, you can view my [resume](/about/resume). </description>
    </item>
    
    <item>
      <title>music</title>
      <link>https://coda.life/music/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coda.life/music/</guid>
      <description>View all my gear on Equipboard.com</description>
    </item>
    
    <item>
      <title>projects</title>
      <link>https://coda.life/projects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coda.life/projects/</guid>
      <description>Open Source Closed Source   prep A c++ package manager and build tool. Think npm for c++. Uses plugins for system independent dependency management and builds.</description>
    </item>
    
    <item>
      <title>resume</title>
      <link>https://coda.life/resume/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coda.life/resume/</guid>
      <description>778-240-3248     ryan@coda.life     github.com/ryjen     ca.linkedin.com/in/ryjen    https://coda.life   (Robert) Ryan Jennings  Self-taught programmer since 2002, formally educated in Computer Systems at BCIT with distinction. Started professionally in quality assurance and embedded systems and been a part of the mobile revolution for 8 years on multiple platforms and languages.
 Pragmatism has been a guiding philosophy during education and professional life.</description>
    </item>
    
    <item>
      <title>things</title>
      <link>https://coda.life/things/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://coda.life/things/</guid>
      <description>Books  in no particular order
RxJava for Android Developers If you were confused about Rx or RxJava, this book does a great job of a practical explanation. Its still in early access as of 12/20/17.
 Illusions: Adventures of a Reluctant Messiah An interesting story, the unix fortunes command has quotes from this book so it made its way into some of my heroes.
 Cracking the Coding Interview Found this book to be very useful, good example problems and content just for your own enjoyment of solving if your not interviewing.</description>
    </item>
    
  </channel>
</rss>