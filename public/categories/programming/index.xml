<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>programming on ryan jennings</title>
    <link>https://ryanjennin.gs/categories/programming/</link>
    <description>Recent content in programming on ryan jennings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 24 Jul 2020 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://ryanjennin.gs/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>why golang</title>
      <link>https://ryanjennin.gs/2020/07/24/why-golang/</link>
      <pubDate>Fri, 24 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ryanjennin.gs/2020/07/24/why-golang/</guid>
      <description>Have become a fan boy of golang as a replacement for my beloved C purely because it is so simplified, and thus a guru language to me.
As it stands now, I am somewhat burned out in the depths of a mid-life crisis and pandemic. Do not have, or want, the memory capacity for anything more complex or verbose.
A language like go meets these soft skill requirements more than others:</description>
    </item>
    
    <item>
      <title>why golang</title>
      <link>https://ryanjennin.gs/2020/07/24/why-golang/</link>
      <pubDate>Fri, 24 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ryanjennin.gs/2020/07/24/why-golang/</guid>
      <description>Have become a fan boy of golang as a replacement for my beloved C purely because it is so simplified, and thus a guru language to me.
As it stands now, I am somewhat burned out in the depths of a mid-life crisis and pandemic. Do not have, or want, the memory capacity for anything more complex or verbose.
A language like go meets these soft skill requirements more than others:</description>
    </item>
    
    <item>
      <title>git notes as a storage mechanism</title>
      <link>https://ryanjennin.gs/2020/06/25/git-notes-as-a-storage-mechanism/</link>
      <pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ryanjennin.gs/2020/06/25/git-notes-as-a-storage-mechanism/</guid>
      <description>Am working on a project build tool to make repeatable tasks for Micrantha projects easier.
A module of this tool is automatic versioning using semantic version.
The versioning The way I wanted the versioning to work is to have thresholds for when a version component auto-increments.
For example:
 A patch version will increment after 300 builds A minor version will increment after 100 patch builds  This is a potential feature that projects can use as a reminder to bump a version if there are breaking changes.</description>
    </item>
    
  </channel>
</rss>