<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Software Industry Blog on ryan jennings</title><link>https://ryanjennin.gs/post/</link><description>Recent content in Software Industry Blog on ryan jennings</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 05 Jan 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://ryanjennin.gs/post/index.xml" rel="self" type="application/rss+xml"/><item><title>Killing the Pain</title><link>https://ryanjennin.gs/2021/01/05/killing-the-pain/</link><pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate><guid>https://ryanjennin.gs/2021/01/05/killing-the-pain/</guid><description>Pain is the only lens from which I can view the software industry.
&amp;ldquo;Killing&amp;rdquo; is such a sales word, but its what I want to do to it.
Normally, a level of unsatisfaction would be OK - its just a job. Hard to accept as a hobby once loved, or as a threatened means of survival.
People tell me I am too negative (which I am). Easy for them to say.</description></item><item><title>Rubber Ducking</title><link>https://ryanjennin.gs/2020/12/23/rubber-ducking/</link><pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate><guid>https://ryanjennin.gs/2020/12/23/rubber-ducking/</guid><description>Yes, rubber duck debugging is really funny (post it on quack overflow!).
The wiki, a dedicated site or coding horror explain it pretty well.
It is a fantastic methodology because there is no other human to try and take advantage of your stupidity - implicitly (unconsciously) or explicitly (capitalism).
Like media and technology which this world loves and wants to be (metro techno star)&amp;hellip;. There is a shadow side.
To me the story says something about doing programming in the bathtub with a computer.</description></item><item><title>Blockchain Mesh Networks</title><link>https://ryanjennin.gs/2020/09/18/blockchain-mesh-networks/</link><pubDate>Fri, 18 Sep 2020 00:00:00 +0000</pubDate><guid>https://ryanjennin.gs/2020/09/18/blockchain-mesh-networks/</guid><description>Using the blockchain mesh network routers allow freedom and payments.
The underlying core of bitcoin, the blockchain is a system that can be applied to a variety of uses.
One particular disruptive use, that is not mentioned on the wiki, is mesh networks.
Like AI, nanotech or self driving cars, the technology has it&amp;rsquo;s criticisms of being advantageous to criminals (IMHO the lesser of evils).
Concept The idea and benefits are simple enough:</description></item><item><title>Software Methodologies</title><link>https://ryanjennin.gs/2020/08/20/software-methodologies/</link><pubDate>Thu, 20 Aug 2020 00:00:00 +0000</pubDate><guid>https://ryanjennin.gs/2020/08/20/software-methodologies/</guid><description>At the end of the day, software methodologies are all some form of Development Lifecycle.
That is to say, the individuals unit of work, the team&amp;rsquo;s unit of work and the business, are in one of several stages.
Requirements and Planning Analysis and Design Implementation Testing and Verification Deployment and Maintenance That is it. We all know it. The steps may vary but the core ones remain the same.</description></item><item><title>Hybrid Schemaless Databases</title><link>https://ryanjennin.gs/2020/08/04/hybrid-schemaless-databases/</link><pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate><guid>https://ryanjennin.gs/2020/08/04/hybrid-schemaless-databases/</guid><description>TL;DR - Hydrid relational schemaless databases are quite awesome, with a little bit flowers in the garden.
True schemaless databases came into my radar with MongoDB, Redis and such. I have often admired the ability to alter schema on fly and enjoyed experimenting with the possibilities.
Enterprise solutions like Couchbase and Firebase have been big successes (even the now defunct Cparse).
Why? The success of schemaless databases makes a lot of sense in part because of API consumption of JSON and mobile devices if you can get the synchronization part right.</description></item><item><title>Git Notes Storage</title><link>https://ryanjennin.gs/2020/06/25/git-notes-storage/</link><pubDate>Thu, 25 Jun 2020 00:00:00 +0000</pubDate><guid>https://ryanjennin.gs/2020/06/25/git-notes-storage/</guid><description>Am working on a project build tool to make repeatable tasks for Micrantha projects easier.
A module of this tool is automatic versioning using semantic version.
The versioning The way I wanted the versioning to work is to have thresholds for when a version component auto-increments.
For example:
A patch version will increment after 300 builds A minor version will increment after 100 patch builds This use as a reminder to bump a version if there are breaking changes or if you need to do more design.</description></item><item><title>Mirroring git with jenkins</title><link>https://ryanjennin.gs/2019/07/05/mirroring-git-with-jenkins/</link><pubDate>Fri, 05 Jul 2019 00:00:00 +0000</pubDate><guid>https://ryanjennin.gs/2019/07/05/mirroring-git-with-jenkins/</guid><description>Introduction For some software development projects, there may be a need to backup or mirror the repository to a different location.
Jenkins or other continuous integration (CI) can automate this. This log is a brief summary of how in case I need to reproduce.
Workflow The requirement is to have a single jenkins job that synchronizes various other projects and repositories.
To do this, the job calls another job to mirror any source repository to any set of destination repositories.</description></item><item><title>A self hosting journey</title><link>https://ryanjennin.gs/2019/02/07/a-self-hosting-journey/</link><pubDate>Thu, 07 Feb 2019 00:00:00 +0000</pubDate><guid>https://ryanjennin.gs/2019/02/07/a-self-hosting-journey/</guid><description>Introduction Would like to say that I have valid privacy or security concerns. Or because it can be done better. But the reality is, I just want to self host because I can.
Where to start? The awesome self hosted page lists just about every cloud service I use with a replaceable near-quality solution, if your willing to sacrifice a bit for it.
The other appealing factor is that most of the solutions can be containerized and reproducible across servers - meaning more availability.</description></item><item><title>Favourite 'nixisms</title><link>https://ryanjennin.gs/2018/11/05/favourite-nixisms/</link><pubDate>Mon, 05 Nov 2018 00:00:00 +0000</pubDate><guid>https://ryanjennin.gs/2018/11/05/favourite-nixisms/</guid><description>Introduction A log to myself of things I like about Unix type systems. In case I forget why someday.
Dotfiles files in braille? are they for the blind?Dotfiles in Linux are hidden files preceded with a period. Depending on the program, they are used for configuration in your home directory.
It is common to have a set of dotfiles that you use regularly on different computer systems.
There are many ways and tools to manage your dotfiles.</description></item><item><title>Mitmproxy and Android</title><link>https://ryanjennin.gs/2018/05/16/mitmproxy-and-android/</link><pubDate>Wed, 16 May 2018 00:00:00 +0000</pubDate><guid>https://ryanjennin.gs/2018/05/16/mitmproxy-and-android/</guid><description>Introduction Debugging network traffic for your app can be useful, and sometimes necessary if the data is not what is expected or inconsistent.
The Proxy I prefer the open source proxy [mitmproxy](https://mitmproxy.org =300x203). Easy to install on OSX with homebrew.
brew install mitmproxy
I&amp;rsquo;ll leave it up to you to explore its greatness, I just wanna clarify the android setup.
Steps 1) mitmproxy Choose a port (ex. 8888) and start the program: mitmproxy -p 8888:</description></item><item><title>Fortunes on Slack</title><link>https://ryanjennin.gs/2018/01/22/fortunes-on-slack/</link><pubDate>Mon, 22 Jan 2018 00:00:00 +0000</pubDate><guid>https://ryanjennin.gs/2018/01/22/fortunes-on-slack/</guid><description>view the service homepage
Introduction Have always enjoyed the UNIX fortunes program, ever since I was a wee newbie. If you aren&amp;rsquo;t familiar with it (sad), yes, its like a fortune cookie.
It can be more technical in nature but not always. It also has poems, quotations, and if enabled - offensive content.
Often I would find a fortune I&amp;rsquo;d like to share and pipe it to a snippet from the terminal.</description></item><item><title>Elixir and Phoenix</title><link>https://ryanjennin.gs/2015/09/09/elixir-and-phoenix/</link><pubDate>Wed, 09 Sep 2015 00:00:00 +0000</pubDate><guid>https://ryanjennin.gs/2015/09/09/elixir-and-phoenix/</guid><description>Introduction If you dont know phoenix framework, I&amp;rsquo;d describe it as rails for elixir. If you dont know Elixir I&amp;rsquo;d describe it as a functional language that feels like ruby for erlang.
If you don&amp;rsquo;t know erlang it has been around a while (open-sourced in 1998) and the virtual machine is designed to be highly fault tolerant and scalable for use in telecoms, banking and instant messaging (WhatsApp).
Experimenting To exercise the framework, I created yet another chat app (I know, I know).</description></item><item><title>Best Programming Quotes</title><link>https://ryanjennin.gs/2012/04/10/best-programming-quotes/</link><pubDate>Tue, 10 Apr 2012 00:00:00 +0000</pubDate><guid>https://ryanjennin.gs/2012/04/10/best-programming-quotes/</guid><description>Quotes that relate to software engineering always humble me with their laser-like honesty. I&amp;rsquo;ve decided to keep a collection of my favorites here (in no particular order).</description></item></channel></rss>