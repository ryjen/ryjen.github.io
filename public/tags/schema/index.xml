<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>schema on ryan jennings</title>
    <link>https://ryanjennin.gs/tags/schema/</link>
    <description>Recent content in schema on ryan jennings</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 04 Aug 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://ryanjennin.gs/tags/schema/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hybrid Schemaless Databases</title>
      <link>https://ryanjennin.gs/2020/08/04/hybrid-schemaless-databases/</link>
      <pubDate>Tue, 04 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ryanjennin.gs/2020/08/04/hybrid-schemaless-databases/</guid>
      <description>TL;DR - Hydrid relational schemaless databases are quite awesome, with a little bit flowers in the garden.
True schemaless databases came into my radar with MongoDB, Redis and such. I have often admired the ability to alter schema on fly and enjoyed experimenting with the possibilities.
Enterprise solutions like Couchbase and Firebase have been big successes (even the now defunct Cparse).
Why? The success of schemaless databases makes a lot of sense in part because of API consumption of JSON and mobile devices if you can get the synchronization part right.</description>
    </item>
    
  </channel>
</rss>
