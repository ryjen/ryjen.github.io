{"version":3,"sources":["vendor/scripts/bootstrap-github-widget.js"],"names":[],"mappingsfile":"static/javascripts/vendor.js","sourcesContent":["'use strict';\n\n/* ========================================================================\n * Bootstrap Github Widget: bootsrap-github-widget.js v1.0.0\n * ========================================================================\n * Copyright 2014 Kevin Gillieron <kevin.gillieron@gw-computing.net>\n * Licensed under BSD 3-clauses\n * (https://github.com/gilliek/bootstrap-github-widget/blob/master/LICENSE)\n * ======================================================================== */\n\n(function ($) {\n    'use strict';\n\n    // GITHUB WIDGET CLASS DEFINITION\n    // ==============================\n\n    $.githubWidget = function (element, options) {\n        // defaults options\n        var defaults = {\n            user: '',\n            widget: 'repos',\n            title: 'auto',\n            body: '',\n            footer: '',\n            extrainfo: false, // require font-awesome\n            limit: 5,\n            callback: null\n        };\n\n        var plugin = this;\n        plugin.settings = {};\n\n        var $element = $(element),\n            element = element;\n\n        var fillElement = function fillElement(title, body, content, footer) {\n            var panel = '<div class=\"panel panel-default\">';\n            panel += '<div class=\"panel-heading\">' + title + '</div>';\n            panel += body != '' ? '<div class=\"panel-body\">' + body + '</div>' : '';\n            panel += content;\n            panel += footer != '' ? '<div class=\"panel-footer\" style=\"text-align: right;\">' + footer + '</div>' : '';\n            panel += '</div>';\n            $element.html(panel);\n        };\n\n        var githubURL = function githubURL() {\n            switch (plugin.settings.widget) {\n                case 'repos':\n                    return 'https://github.com/' + plugin.settings.user + '?tab=repositories';\n                case 'gists':\n                    return 'https://gist.github.com/' + plugin.settings.user;\n                default:\n                    return '#';\n            }\n        };\n\n        var autoTitle = function autoTitle() {\n            if (plugin.settings.title !== 'auto') {\n                return plugin.settings.title;\n            }\n            return 'GitHub ' + plugin.settings.widget;\n        };\n\n        var autoBody = function autoBody(owner, numberOf) {\n            if (plugin.settings.body !== 'auto') {\n                return plugin.settings.body;\n            }\n            return '<div class=\"media\">\\\n                        <a class=\"pull-left\" href=\"https://github.com/' + plugin.settings.user + '\">\\\n                            <img class=\"media-object\"\\\n                                 src=\"' + owner.avatar_url + '\"\\\n                                 width=\"64\"\\\n                                 height=\"64\"\\\n                                 alt=\"' + plugin.settings.user + '\" />\\\n                        </a>\\\n                        <div class=\"media-body\">\\\n                            <h4 class=\"media-heading\">' + plugin.settings.user + '</h4>\\\n                            ' + numberOf + ' ' + plugin.settings.widget + ' \\\n                            (<a href=\"' + githubURL() + '\">see all</a>)\\\n                        </div>\\\n                    </div>';\n        };\n\n        var autoFooter = function autoFooter(footer) {\n            if (plugin.settings.footer !== 'auto') {\n                return plugin.settings.footer;\n            }\n            return '<a href=\"https://github.com/' + plugin.settings.user + '\">' + plugin.settings.user + '</a> <span class=\"text-muted\">@ GitHub</span>';\n        };\n\n        var repoInfo = function repoInfo(repo) {\n            if (!plugin.settings.extrainfo) {\n                return '';\n            }\n            return '<span class=\"pull-right\">\\\n                        <i class=\"fa fa-eye\"></i> ' + repo.watchers_count + '&nbsp;&nbsp;\\\n                        <i class=\"fa fa-star\"></i> ' + repo.stargazers_count + '&nbsp;&nbsp;\\\n                        <i class=\"fa fa-code-fork\"></i> ' + repo.forks + '\\\n                   </span>';\n        };\n\n        var gistInfo = function gistInfo(gist) {\n            if (!plugin.settings.extrainfo) {\n                return '';\n            }\n            return '<span class=\"pull-right\">\\\n                        <i class=\"fa fa-eye\"></i> ' + repo.watchers_count + '&nbsp;&nbsp;\\\n                        <i class=\"fa fa-star\"></i> ' + repo.stargazers_count + '&nbsp;&nbsp;\\\n                        <i class=\"fa fa-code-fork\"></i> ' + repo.forks + '\\\n                   </span>';\n        };\n\n        var fetchFromGithub = function fetchFromGithub() {\n            var user = plugin.settings.user;\n            var action = plugin.settings.widget;\n\n            if (!user) return;\n\n            $.ajax({\n                url: 'https://api.github.com/users/' + user + '/' + action + '?sort=pushed',\n                type: 'GET',\n                dataType: 'json',\n                success: function success(data) {\n                    var title = autoTitle();\n                    var body = autoBody(data[0]['owner'], data.length);\n                    var footer = autoFooter();\n                    var limit = plugin.settings.limit;\n\n                    var content = '<ul class=\"list-group\">';\n                    var total = 0;\n\n                    $.each(data, function (k, v) {\n                        if (limit > 0 && total >= limit) {\n                            return;\n                        }\n\n                        if (v.fork) {\n                            return;\n                        }\n\n                        content += '<li class=\"list-group-item\">';\n\n                        switch (action) {\n                            case 'repos':\n                                content += '<a href=\"' + v.html_url + '\">' + v.full_name.replace(plugin.settings.user + '/', '') + '</a> \\\n                                      ' + repoInfo(v) + '\\\n                                      <br/>' + v.description;\n                                break;\n                            case 'gists':\n                                var gistName = v.owner.login + \"/\" + Object.keys(v.files)[0];\n                                content += '<a href=\"' + v.html_url + '\">' + gistName + '</a> \\\n                                      ' + gistInfo(v) + '\\\n                                      <br/>' + v.description;\n                                break;\n                        }\n\n                        total++;\n                    });\n\n                    content += '</ul>';\n\n                    fillElement(title, body, content, footer);\n\n                    if (plugin.settings.callback) {\n                        plugin.settings.callback();\n                    }\n                }\n            });\n        };\n\n        plugin.init = function () {\n            plugin.settings = $.extend({}, defaults, options);\n            fetchFromGithub();\n        };\n\n        plugin.init();\n    };\n\n    // GITHUB WIDGET PLUGIN DEFINITION\n    // ===============================\n\n    $.fn.githubWidget = function (options) {\n        return this.each(function () {\n            var plugin = new $.githubWidget(this, options);\n        });\n    };\n\n    // GITHUB WIDGET DATA API\n    // ======================\n\n    $(function () {\n        $.each($('[data-toggle=\"github-widget\"]'), function () {\n            var inputUser = $(this).data('user');\n            var inputWidget = $(this).data('widget');\n            var inputTitle = $(this).data('title');\n            var inputBody = $(this).data('body');\n            var inputFooter = $(this).data('footer');\n            var inputExtraInfo = $(this).data('extrainfo');\n            var inputLimit = $(this).data('limit');\n\n            if (inputUser !== undefined) {\n                var options = {};\n                options.user = inputUser;\n                options.widget = inputWidget !== undefined ? inputWidget : 'repos';\n                options.title = inputTitle !== undefined ? inputTitle : 'auto';\n                options.body = inputBody !== undefined ? inputBody : '';\n                options.footer = inputFooter !== undefined ? inputFooter : '';\n                options.extrainfo = inputExtraInfo !== undefined ? Boolean(inputExtraInfo) : false;\n                options.limit = inputLimit !== undefined ? parseInt(inputLimit) : 5;\n\n                var plugin = new $.githubWidget(this, options);\n            }\n        });\n    });\n})(jQuery);\n"]}