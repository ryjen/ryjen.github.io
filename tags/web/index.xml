<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>web on Home</title>
    <link>https://ryanjennin.gs/tags/web/</link>
    <description>Recent content in web on Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 05 Feb 2021 02:21:42 -0800</lastBuildDate><atom:link href="https://ryanjennin.gs/tags/web/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>React vs Flutter</title>
      <link>https://ryanjennin.gs/posts/react-vs-flutter/</link>
      <pubDate>Fri, 05 Feb 2021 02:21:42 -0800</pubDate>
      
      <guid>https://ryanjennin.gs/posts/react-vs-flutter/</guid>
      <description>The big trade off between Flutter and React is:
web support vs spread operator
Sound silly? Let me elaborate&amp;hellip;
flutter / dart The main advantage here is web support. With react the mobile and web components are not compatible without some experimental library to translate them.</description>
    </item>
    
    <item>
      <title>OpenAPI Directory &amp; Swagger</title>
      <link>https://ryanjennin.gs/posts/openapi-swagger/</link>
      <pubDate>Sat, 10 Jun 2017 01:33:30 -0700</pubDate>
      
      <guid>https://ryanjennin.gs/posts/openapi-swagger/</guid>
      <description>Was browsing github and I came across the OpenAPI Directory. A good directory of API&amp;rsquo;s will help in thinking of a mobile app idea.
Couldn&amp;rsquo;t help but notice that all the API&amp;rsquo;s implement something called OpenAPI (&amp;quot;Swagger&amp;quot;) 2.0. Ok, great, consistency in API specs, that will help if you had to write one.</description>
    </item>
    
    <item>
      <title>Microsoft Dev Stack on macOS</title>
      <link>https://ryanjennin.gs/archive/microsoft-dev-stack-macos/</link>
      <pubDate>Sun, 27 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://ryanjennin.gs/archive/microsoft-dev-stack-macos/</guid>
      <description>Gonna evangelize a little bit.
When Microsoft bought Xamarin, they did not underestimate the power of Xamarin.Forms for building cross platform UIs. Now with the release of Visual Studio for macOS and the Dotnet Core, its looks like its going to stay alive.</description>
    </item>
    
    <item>
      <title>Mud Harbour: An Experiment in Websockets and Java Web Frameworks</title>
      <link>https://ryanjennin.gs/posts/mud-harbour-an-experiment-in-websockets-and-java-web-frameworks/</link>
      <pubDate>Sat, 10 Aug 2013 00:00:00 +0000</pubDate>
      
      <guid>https://ryanjennin.gs/posts/mud-harbour-an-experiment-in-websockets-and-java-web-frameworks/</guid>
      <description>Well I spent some time put a web front end to some java code I made a long time ago for a MUD
The project is a decent example of Jersey, SocialAuth and WebSockets with some other nifty things (taken from other frameworks - like flash messages).</description>
    </item>
    
    <item>
      <title>Crafting a Game With CraftyJS</title>
      <link>https://ryanjennin.gs/archive/crafting-a-game-with-craftyjs/</link>
      <pubDate>Sat, 17 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://ryanjennin.gs/archive/crafting-a-game-with-craftyjs/</guid>
      <description>Introduction Briefly going to mention a javascript game engine called CraftyJS that I&amp;rsquo;ve been playing with the past couple of days.
Has the usual suspects like Entity Component System, Collision, Sprite Maps, etc.
The Project 
Amos the Alien is a small demo I made.</description>
    </item>
    
  </channel>
</rss>
