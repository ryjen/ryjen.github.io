<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Polymorphism on Home</title><link>https://ryanjennin.gs/tags/polymorphism/</link><description>Recent content in Polymorphism on Home</description><generator>Hugo</generator><language>en-us</language><lastBuildDate>Wed, 02 Dec 2015 00:00:00 +0000</lastBuildDate><atom:link href="https://ryanjennin.gs/tags/polymorphism/index.xml" rel="self" type="application/rss+xml"/><item><title>c hacking: polymorphing 2</title><link>https://ryanjennin.gs/archive/c-hacking-polymoriphing-2/</link><pubDate>Wed, 02 Dec 2015 00:00:00 +0000</pubDate><guid>https://ryanjennin.gs/archive/c-hacking-polymoriphing-2/</guid><description>&lt;p>While working on &lt;a href="http://github.com/ryjen/cparse">cparse&lt;/a> I found another nifty way to sort of simulate polymorphism.&lt;/p>
&lt;h1 id="cparse">cparse&lt;/h1>
&lt;p>Another exercise in futility, a C implementation for the REST api at &lt;a href="http://parse.com">parse.com&lt;/a>. Really the core of it is a web client and an object structure using json.&lt;/p></description></item><item><title>Poor Man's Polymorphism</title><link>https://ryanjennin.gs/archive/poor-man-s-polymorphism/</link><pubDate>Fri, 30 Nov 2012 00:00:00 +0000</pubDate><guid>https://ryanjennin.gs/archive/poor-man-s-polymorphism/</guid><description>&lt;p>Found out that C structs can be casted between each other if the &lt;strong>field types and ordering are the same&lt;/strong>. It is not portable code, but you can start too see how and why the virtual table and object oriented programming evolved in c++.&lt;/p></description></item></channel></rss>