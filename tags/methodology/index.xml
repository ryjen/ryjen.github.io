<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>methodology on Home</title>
    <link>https://ryanjennin.gs/tags/methodology/</link>
    <description>Recent content in methodology on Home</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 23 Dec 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://ryanjennin.gs/tags/methodology/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Rubber Ducking</title>
      <link>https://ryanjennin.gs/posts/rubber-ducking/</link>
      <pubDate>Wed, 23 Dec 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ryanjennin.gs/posts/rubber-ducking/</guid>
      <description>Yes, rubber duck debugging is really funny (post it on quack overflow!).
The wiki, a dedicated site or coding horror explain it pretty well.
It is a fantastic methodology because there is no other human to try and take advantage of your stupidity - implicitly (unconsciously) or explicitly (capitalism).</description>
    </item>
    
    <item>
      <title>Software Methodologies</title>
      <link>https://ryanjennin.gs/posts/sdlc-methodologies/</link>
      <pubDate>Thu, 20 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://ryanjennin.gs/posts/sdlc-methodologies/</guid>
      <description>At the end of the day, software methodologies are all some form of Development Lifecycle.
That is to say, the individuals unit of work, the team&amp;rsquo;s unit of work and the business, are in one of several stages.
 Requirements and Planning Analysis and Design Implementation Testing and Verification Deployment and Maintenance  That is it.</description>
    </item>
    
  </channel>
</rss>
