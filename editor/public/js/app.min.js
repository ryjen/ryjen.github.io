const authToken = "8E75C69C881A472F3F563835D6A89";

$(function() {
  $("#post-submit").click(function(e) {
    e.preventDefault();
    $.ajax({
      type: "POST",
      url: "https://jenkins.micrantha.com/generic-webhook-trigger/invoke",
      data: {
        content: $("post-content").text(),
        file_name: $("post-file-name").text()
      },
      dataType: "json",
      beforeSend: function(xhr) {
        xhr.setRequestHeader('X-Auth-Token', authToken);
      }),
      success: function(result) {
        alert("Posted.");
      },
      failure: function(result) {
        alert("An error occured posting.");
      }
    });
  });
});


// Avoid `console` errors in browsers that lack a console.
(function() {
  var method;
  var noop = function () {};
  var methods = [
    'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',
    'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',
    'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',
    'timeline', 'timelineEnd', 'timeStamp', 'trace', 'warn'
  ];
  var length = methods.length;
  var console = (window.console = window.console || {});

  while (length--) {
    method = methods[length];

    // Only stub undefined methods.
    if (!console[method]) {
      console[method] = noop;
    }
  }
}());

// Place any jQuery/helper plugins in here.

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyIsInBsdWdpbnMuanMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FDMUJBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6ImFwcC5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBhdXRoVG9rZW4gPSBcIjhFNzVDNjlDODgxQTQ3MkYzRjU2MzgzNUQ2QTg5XCI7XG5cbiQoZnVuY3Rpb24oKSB7XG4gICQoXCIjcG9zdC1zdWJtaXRcIikuY2xpY2soZnVuY3Rpb24oZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICAkLmFqYXgoe1xuICAgICAgdHlwZTogXCJQT1NUXCIsXG4gICAgICB1cmw6IFwiaHR0cHM6Ly9qZW5raW5zLm1pY3JhbnRoYS5jb20vZ2VuZXJpYy13ZWJob29rLXRyaWdnZXIvaW52b2tlXCIsXG4gICAgICBkYXRhOiB7XG4gICAgICAgIGNvbnRlbnQ6ICQoXCJwb3N0LWNvbnRlbnRcIikudGV4dCgpLFxuICAgICAgICBmaWxlX25hbWU6ICQoXCJwb3N0LWZpbGUtbmFtZVwiKS50ZXh0KClcbiAgICAgIH0sXG4gICAgICBkYXRhVHlwZTogXCJqc29uXCIsXG4gICAgICBiZWZvcmVTZW5kOiBmdW5jdGlvbih4aHIpIHtcbiAgICAgICAgeGhyLnNldFJlcXVlc3RIZWFkZXIoJ1gtQXV0aC1Ub2tlbicsIGF1dGhUb2tlbik7XG4gICAgICB9KSxcbiAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKHJlc3VsdCkge1xuICAgICAgICBhbGVydChcIlBvc3RlZC5cIik7XG4gICAgICB9LFxuICAgICAgZmFpbHVyZTogZnVuY3Rpb24ocmVzdWx0KSB7XG4gICAgICAgIGFsZXJ0KFwiQW4gZXJyb3Igb2NjdXJlZCBwb3N0aW5nLlwiKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfSk7XG59KTtcblxuIiwiLy8gQXZvaWQgYGNvbnNvbGVgIGVycm9ycyBpbiBicm93c2VycyB0aGF0IGxhY2sgYSBjb25zb2xlLlxuKGZ1bmN0aW9uKCkge1xuICB2YXIgbWV0aG9kO1xuICB2YXIgbm9vcCA9IGZ1bmN0aW9uICgpIHt9O1xuICB2YXIgbWV0aG9kcyA9IFtcbiAgICAnYXNzZXJ0JywgJ2NsZWFyJywgJ2NvdW50JywgJ2RlYnVnJywgJ2RpcicsICdkaXJ4bWwnLCAnZXJyb3InLFxuICAgICdleGNlcHRpb24nLCAnZ3JvdXAnLCAnZ3JvdXBDb2xsYXBzZWQnLCAnZ3JvdXBFbmQnLCAnaW5mbycsICdsb2cnLFxuICAgICdtYXJrVGltZWxpbmUnLCAncHJvZmlsZScsICdwcm9maWxlRW5kJywgJ3RhYmxlJywgJ3RpbWUnLCAndGltZUVuZCcsXG4gICAgJ3RpbWVsaW5lJywgJ3RpbWVsaW5lRW5kJywgJ3RpbWVTdGFtcCcsICd0cmFjZScsICd3YXJuJ1xuICBdO1xuICB2YXIgbGVuZ3RoID0gbWV0aG9kcy5sZW5ndGg7XG4gIHZhciBjb25zb2xlID0gKHdpbmRvdy5jb25zb2xlID0gd2luZG93LmNvbnNvbGUgfHwge30pO1xuXG4gIHdoaWxlIChsZW5ndGgtLSkge1xuICAgIG1ldGhvZCA9IG1ldGhvZHNbbGVuZ3RoXTtcblxuICAgIC8vIE9ubHkgc3R1YiB1bmRlZmluZWQgbWV0aG9kcy5cbiAgICBpZiAoIWNvbnNvbGVbbWV0aG9kXSkge1xuICAgICAgY29uc29sZVttZXRob2RdID0gbm9vcDtcbiAgICB9XG4gIH1cbn0oKSk7XG5cbi8vIFBsYWNlIGFueSBqUXVlcnkvaGVscGVyIHBsdWdpbnMgaW4gaGVyZS5cbiJdfQ==
